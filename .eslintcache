[{"C:\\Users\\issol\\mindnote\\src\\index.tsx":"1","C:\\Users\\issol\\mindnote\\src\\App.tsx":"2","C:\\Users\\issol\\mindnote\\src\\store\\rootSaga.ts":"3","C:\\Users\\issol\\mindnote\\src\\store\\index.ts":"4","C:\\Users\\issol\\mindnote\\src\\store\\users\\sagas.ts":"5","C:\\Users\\issol\\mindnote\\src\\router\\Root.tsx":"6","C:\\Users\\issol\\mindnote\\src\\store\\users\\reducer.ts":"7","C:\\Users\\issol\\mindnote\\src\\store\\users\\actions.ts":"8","C:\\Users\\issol\\mindnote\\src\\pages\\Home\\index.tsx":"9","C:\\Users\\issol\\mindnote\\src\\components\\TextInput\\index.tsx":"10","C:\\Users\\issol\\mindnote\\src\\components\\FormWrapper\\index.tsx":"11","C:\\Users\\issol\\mindnote\\src\\constants\\requests.ts":"12","C:\\Users\\issol\\mindnote\\src\\pages\\Auth\\index.tsx":"13","C:\\Users\\issol\\mindnote\\src\\modules\\SingUp\\index.tsx":"14","C:\\Users\\issol\\mindnote\\src\\modules\\LogIn\\index.tsx":"15","C:\\Users\\issol\\mindnote\\src\\modules\\SingUp\\container.tsx":"16","C:\\Users\\issol\\mindnote\\src\\modules\\LogIn\\container.tsx":"17","C:\\Users\\issol\\mindnote\\src\\modules\\SingUp\\presenter.tsx":"18","C:\\Users\\issol\\mindnote\\src\\modules\\LogIn\\presenter.tsx":"19","C:\\Users\\issol\\mindnote\\src\\pages\\Auth\\container.tsx":"20","C:\\Users\\issol\\mindnote\\src\\pages\\Auth\\presenter.tsx":"21","C:\\Users\\issol\\mindnote\\src\\pages\\Home\\container.tsx":"22","C:\\Users\\issol\\mindnote\\src\\pages\\Home\\presenter.tsx":"23","C:\\Users\\issol\\mindnote\\src\\components\\Navigation\\index.tsx":"24","C:\\Users\\issol\\mindnote\\src\\store\\articles\\actions.ts":"25","C:\\Users\\issol\\mindnote\\src\\store\\articles\\reducer.ts":"26","C:\\Users\\issol\\mindnote\\src\\pages\\ArticleForm\\index.tsx":"27","C:\\Users\\issol\\mindnote\\src\\pages\\ArticleForm\\container.tsx":"28","C:\\Users\\issol\\mindnote\\src\\pages\\ArticleForm\\presenter.tsx":"29","C:\\Users\\issol\\mindnote\\src\\components\\StatusModal\\index.tsx":"30","C:\\Users\\issol\\mindnote\\src\\utils\\auth.tsx":"31","C:\\Users\\issol\\mindnote\\src\\assets\\styles\\theme.ts":"32","C:\\Users\\issol\\mindnote\\src\\assets\\styles\\global-styles.ts":"33"},{"size":661,"mtime":1611662489384,"results":"34","hashOfConfig":"35"},{"size":592,"mtime":1610882480171,"results":"36","hashOfConfig":"35"},{"size":162,"mtime":1610348073197,"results":"37","hashOfConfig":"35"},{"size":307,"mtime":1611588528822,"results":"38","hashOfConfig":"35"},{"size":1279,"mtime":1611643136322,"results":"39","hashOfConfig":"35"},{"size":566,"mtime":1611240639590,"results":"40","hashOfConfig":"35"},{"size":1380,"mtime":1611633974088,"results":"41","hashOfConfig":"35"},{"size":1082,"mtime":1611589672891,"results":"42","hashOfConfig":"35"},{"size":75,"mtime":1611240639588,"results":"43","hashOfConfig":"35"},{"size":553,"mtime":1610872710502,"results":"44","hashOfConfig":"35"},{"size":341,"mtime":1610797533949,"results":"45","hashOfConfig":"35"},{"size":142,"mtime":1611223890918,"results":"46","hashOfConfig":"35"},{"size":75,"mtime":1611240639585,"results":"47","hashOfConfig":"35"},{"size":79,"mtime":1611223890928,"results":"48","hashOfConfig":"35"},{"size":77,"mtime":1611223890922,"results":"49","hashOfConfig":"35"},{"size":2334,"mtime":1611635395070,"results":"50","hashOfConfig":"35"},{"size":1694,"mtime":1611652510787,"results":"51","hashOfConfig":"35"},{"size":889,"mtime":1611574295127,"results":"52","hashOfConfig":"35"},{"size":715,"mtime":1611573125167,"results":"53","hashOfConfig":"35"},{"size":807,"mtime":1611663840019,"results":"54","hashOfConfig":"35"},{"size":1683,"mtime":1611912118519,"results":"55","hashOfConfig":"35"},{"size":1023,"mtime":1611652580904,"results":"56","hashOfConfig":"35"},{"size":723,"mtime":1611584398989,"results":"57","hashOfConfig":"35"},{"size":1365,"mtime":1611240639575,"results":"58","hashOfConfig":"35"},{"size":549,"mtime":1611912917373,"results":"59","hashOfConfig":"35"},{"size":690,"mtime":1611912924165,"results":"60","hashOfConfig":"35"},{"size":89,"mtime":1611240639582,"results":"61","hashOfConfig":"35"},{"size":1109,"mtime":1611912537200,"results":"62","hashOfConfig":"35"},{"size":797,"mtime":1611573460179,"results":"63","hashOfConfig":"35"},{"size":852,"mtime":1611634304596,"results":"64","hashOfConfig":"35"},{"size":420,"mtime":1611642238769,"results":"65","hashOfConfig":"35"},{"size":329,"mtime":1611662326258,"results":"66","hashOfConfig":"35"},{"size":288,"mtime":1611662309811,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"q3pesx",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\issol\\mindnote\\src\\index.tsx",[],["146","147"],"C:\\Users\\issol\\mindnote\\src\\App.tsx",[],"C:\\Users\\issol\\mindnote\\src\\store\\rootSaga.ts",[],"C:\\Users\\issol\\mindnote\\src\\store\\index.ts",[],"C:\\Users\\issol\\mindnote\\src\\store\\users\\sagas.ts",["148"],"import { LogInInfo, SignUpInfo } from './types';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { logIn, LOG_IN_REQUEST, signUp, SIGN_UP_REQUEST } from './actions';\r\nimport { HOST } from 'constants/requests';\r\n\r\nconst LogInApi = (payload: LogInInfo) =>\r\n  axios.post(HOST + '/users/tokens/', payload);\r\n\r\nfunction* LogInAsync(action: { type: string; payload: LogInInfo }) {\r\n  try {\r\n    const res = yield call(LogInApi, action.payload);\r\n    localStorage.setItem('token', res.data.token);\r\n    yield put(logIn.success());\r\n  } catch (e) {\r\n    localStorage.removeItem('token');\r\n    yield put(logIn.failure(e.request.responseText));\r\n  }\r\n}\r\n\r\nconst SignUpApi = (payload: SignUpInfo) =>\r\n  axios.post(HOST + '/users/', payload);\r\n\r\nfunction* SignUpAsync(action: { type: string; payload: SignUpInfo }) {\r\n  try {\r\n    const res = yield call(SignUpApi, action.payload);\r\n\r\n    localStorage.setItem('token', res.data.token);\r\n    yield put(signUp.success());\r\n  } catch (e) {\r\n    localStorage.removeItem('token');\r\n    yield put(signUp.failure(e.request.responseText));\r\n  }\r\n}\r\nexport function* watchUser() {\r\n  yield takeEvery(LOG_IN_REQUEST, LogInAsync);\r\n  yield takeEvery(SIGN_UP_REQUEST, SignUpAsync);\r\n}\r\n","C:\\Users\\issol\\mindnote\\src\\router\\Root.tsx",["149"],"import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport LogIn from 'modules/LogIn';\r\nimport Home from 'pages/Home';\r\nimport Auth from 'pages/Auth';\r\nimport ArticleForm from 'pages/ArticleForm';\r\n\r\nconst Root = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Auth} />\r\n        <Route exatt path=\"/home\" component={Home} />\r\n        <Route exact path=\"/create-article\" component={ArticleForm} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","C:\\Users\\issol\\mindnote\\src\\store\\users\\reducer.ts",["150"],"import { action, createReducer } from 'typesafe-actions';\r\nimport {\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_SUCCESS,\r\n  SET_LOG_IN_INFO,\r\n  SIGN_UP_FAILURE,\r\n  SET_SIGN_UP_INFO,\r\n  SIGN_UP_SUCCESS,\r\n} from './actions';\r\nimport { UserState, UserAction } from './types';\r\n\r\nconst initialState: UserState = {\r\n  isLoggedIn: false,\r\n  statusMessage: '',\r\n  logInInfo: {\r\n    email: '',\r\n    password: '',\r\n  },\r\n  signUpInfo: {\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n  },\r\n};\r\n\r\nconst userReducer = createReducer<UserState, UserAction>(initialState, {\r\n  [SET_LOG_IN_INFO]: (state, action) => ({\r\n    ...state,\r\n    logInInfo: {\r\n      ...state.logInInfo,\r\n      ...action.payload,\r\n    },\r\n  }),\r\n\r\n  [LOG_IN_SUCCESS]: (state) => ({\r\n    ...state,\r\n    isLoggedIn: true,\r\n    statusMessage: '로그인 성공',\r\n  }),\r\n  [LOG_IN_FAILURE]: (state, action) => ({\r\n    ...state,\r\n    isLoggedIn: false,\r\n    statusMessage: '로그인 실패',\r\n  }),\r\n  [SET_SIGN_UP_INFO]: (state, action) => ({\r\n    ...state,\r\n    signUpInfo: {\r\n      ...state.signUpInfo,\r\n      ...action.payload,\r\n    },\r\n  }),\r\n  [SIGN_UP_SUCCESS]: (state) => ({\r\n    ...state,\r\n    isLoggedIn: true,\r\n    statusMessage: '회원가입 성공',\r\n  }),\r\n  [SIGN_UP_FAILURE]: (state, action) => ({\r\n    ...state,\r\n    isLoggedIn: false,\r\n    statusMessage: action.payload,\r\n  }),\r\n});\r\n\r\nexport default userReducer;\r\n","C:\\Users\\issol\\mindnote\\src\\store\\users\\actions.ts",[],"C:\\Users\\issol\\mindnote\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\components\\TextInput\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\components\\FormWrapper\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\constants\\requests.ts",[],"C:\\Users\\issol\\mindnote\\src\\pages\\Auth\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\modules\\SingUp\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\modules\\LogIn\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\modules\\SingUp\\container.tsx",["151"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from 'store';\r\nimport { setSignUpInfo, signUp } from 'store/users/actions';\r\nimport SignUpPresenter from './presenter';\r\nimport { useAlert } from 'react-alert';\r\nimport StatusModal from 'components/StatusModal';\r\n\r\nconst SignUpContainer = () => {\r\n  const userReducer = useSelector((state: RootState) => state.userReducer);\r\n  const dispatch = useDispatch();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const changeEmail = (value: string) => {\r\n    dispatch(setSignUpInfo({ email: value }));\r\n  };\r\n\r\n  const changePassword = (value: string) => {\r\n    dispatch(setSignUpInfo({ password: value }));\r\n  };\r\n\r\n  const changeName = (value: string) => {\r\n    dispatch(setSignUpInfo({ name: value }));\r\n  };\r\n\r\n  const handelSignUp = () => {\r\n    if (isValid()) {\r\n      dispatch(signUp.request(userReducer.signUpInfo));\r\n      setModalShow(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (userReducer.statusMessage !== '') {\r\n      if (userReducer.statusMessage.includes('already')) {\r\n        setErrorMessage('이미 동일한 이메일이 존재합니다');\r\n      } else if (userReducer.statusMessage.includes('valid')) {\r\n        setErrorMessage('유효한 이메일 형식을 입력해주세요.');\r\n      }\r\n    }\r\n  }, [userReducer.statusMessage]);\r\n\r\n  const isValid = () => {\r\n    if (userReducer.signUpInfo.email === '') {\r\n      setErrorMessage('아이디를 입력해주세요.');\r\n    } else if (userReducer.signUpInfo.password === '') {\r\n      setErrorMessage('비밀번호를 입력해주세요.');\r\n    } else if (userReducer.signUpInfo.name === '') {\r\n      setErrorMessage('이름을 입력해주세요.');\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {modalShow ? (\r\n        <StatusModal\r\n          statusMessage={errorMessage}\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n        />\r\n      ) : null}\r\n      <SignUpPresenter\r\n        userReducer={userReducer}\r\n        changeEmail={changeEmail}\r\n        changePassword={changePassword}\r\n        changeName={changeName}\r\n        handelSignUp={handelSignUp}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpContainer;\r\n","C:\\Users\\issol\\mindnote\\src\\modules\\LogIn\\container.tsx",["152","153","154","155","156","157"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { RootState } from 'store';\r\nimport { logIn, setLogInInfo } from 'store/users/actions';\r\nimport LogInPresenter from './presenter';\r\nimport { Alert, Button, Modal } from 'react-bootstrap';\r\n\r\nimport StatusModal from 'components/StatusModal';\r\nimport { isLoginFormEmpty } from 'utils/auth';\r\n\r\nconst LogInContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const userReducer = useSelector((state: RootState) => state.userReducer);\r\n\r\n  const handleLogin = () => {\r\n    dispatch(logIn.request(userReducer.logInInfo));\r\n    setModalShow(true);\r\n  };\r\n\r\n  const changeEmail = (value: string) => {\r\n    dispatch(setLogInInfo({ email: value }));\r\n  };\r\n\r\n  const changePassword = (value: string) => {\r\n    dispatch(setLogInInfo({ password: value }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userReducer.statusMessage !== '') {\r\n      setErrorMessage(userReducer.statusMessage);\r\n    }\r\n  }, [userReducer.statusMessage]);\r\n\r\n  return (\r\n    <>\r\n      {modalShow ? (\r\n        <StatusModal\r\n          statusMessage={errorMessage}\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n        />\r\n      ) : null}\r\n      <LogInPresenter\r\n        userReducer={userReducer}\r\n        handleLogin={handleLogin}\r\n        changeEmail={changeEmail}\r\n        changePassword={changePassword}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogInContainer;\r\n","C:\\Users\\issol\\mindnote\\src\\modules\\SingUp\\presenter.tsx",[],"C:\\Users\\issol\\mindnote\\src\\modules\\LogIn\\presenter.tsx",[],"C:\\Users\\issol\\mindnote\\src\\pages\\Auth\\container.tsx",["158"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { RootState } from 'store';\r\nimport AuthPresenter from './presenter';\r\n\r\nconst AuthContainer = () => {\r\n  const [authType, setAuthType] = useState('LogIn');\r\n  const handleAuthType = () => {\r\n    if (authType === 'LogIn') {\r\n      setAuthType('SignUp');\r\n    } else if (authType === 'SignUp') {\r\n      setAuthType('LogIn');\r\n    }\r\n  };\r\n  const userReducer = useSelector((state: RootState) => state.userReducer);\r\n  return (\r\n    <>\r\n      {userReducer.isLoggedIn ? (\r\n        <Redirect to=\"/home\" />\r\n      ) : (\r\n        <AuthPresenter authType={authType} handleAuthType={handleAuthType} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthContainer;\r\n","C:\\Users\\issol\\mindnote\\src\\pages\\Auth\\presenter.tsx",["159"],"C:\\Users\\issol\\mindnote\\src\\pages\\Home\\container.tsx",["160"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { RootState } from 'store';\r\nimport HomePresenter from './presenter';\r\n\r\nconst HomeContainer = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const articleReducer = useSelector(\r\n    (state: RootState) => state.articleReducer\r\n  );\r\n  const userReducer = useSelector((state: RootState) => state.userReducer);\r\n  const createArticle = () => {\r\n    history.push('/create-article');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token') === null) {\r\n      setIsLoggedIn(false);\r\n    } else {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        <HomePresenter\r\n          createArticle={createArticle}\r\n          articleReducer={articleReducer}\r\n        />\r\n      ) : (\r\n        history.push('/')\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeContainer;\r\n","C:\\Users\\issol\\mindnote\\src\\pages\\Home\\presenter.tsx",["161"],"import Navigation from 'components/Navigation';\r\nimport React from 'react';\r\nimport { ArticleState } from 'store/articles/types';\r\nimport userReducer from 'store/users/reducer';\r\n\r\ntype HomeType = {\r\n  createArticle: React.MouseEventHandler<HTMLButtonElement>;\r\n  articleReducer: ArticleState;\r\n};\r\n\r\nconst HomePresenter = ({ createArticle, articleReducer }: HomeType) => {\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      \r\n      <button type=\"button\" onClick={createArticle}>\r\n        +\r\n      </button>\r\n      <div>{articleReducer.articleInfo.title}</div>\r\n      <div>{articleReducer.articleInfo.description}</div>\r\n      <div>{articleReducer.articleInfo.user}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePresenter;\r\n","C:\\Users\\issol\\mindnote\\src\\components\\Navigation\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\store\\articles\\actions.ts",["162"],"C:\\Users\\issol\\mindnote\\src\\store\\articles\\reducer.ts",["163"],"C:\\Users\\issol\\mindnote\\src\\pages\\ArticleForm\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\pages\\ArticleForm\\container.tsx",[],"C:\\Users\\issol\\mindnote\\src\\pages\\ArticleForm\\presenter.tsx",["164","165"],"import TextInput from 'components/TextInput';\r\nimport React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { ArticleState } from 'store/articles/types';\r\n\r\nconst ArticleFormPresenter = ({\r\n  articleReducer,\r\n  changeTitle,\r\n  changeDescription,\r\n  hadleSaveArticle,\r\n}) => {\r\n  return (\r\n    <>\r\n      <TextInput\r\n        type={'text'}\r\n        label={'Title'}\r\n        value={articleReducer.articleInfo.title}\r\n        onChange={changeTitle}\r\n      />\r\n      <TextInput\r\n        type={'text'}\r\n        label={'Desc'}\r\n        value={articleReducer.articleInfo.description}\r\n        onChange={changeDescription}\r\n      />\r\n      <button className=\"save-article\" onClick={hadleSaveArticle}>\r\n        Save\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticleFormPresenter;\r\n","C:\\Users\\issol\\mindnote\\src\\components\\StatusModal\\index.tsx",[],"C:\\Users\\issol\\mindnote\\src\\utils\\auth.tsx",["166","167","168","169","170"],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'store';\r\nimport { UserState } from 'store/users/types';\r\n\r\nexport const isLoginFormEmpty = (userInfo: any) => {\r\n  if (userInfo.email === '') {\r\n    return '이메일을 입력해주세요';\r\n  } else if (userInfo.password === '') {\r\n    return '비밀번호를 입력해주세요';\r\n  }\r\n  return '';\r\n};\r\n",["171","172"],"C:\\Users\\issol\\mindnote\\src\\assets\\styles\\theme.ts",[],"C:\\Users\\issol\\mindnote\\src\\assets\\styles\\global-styles.ts",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":17,"nodeType":"179","messageId":"180","endLine":2,"endColumn":30},{"ruleId":"177","severity":1,"message":"181","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"182","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":16},{"ruleId":"177","severity":1,"message":"183","line":6,"column":10,"nodeType":"179","messageId":"180","endLine":6,"endColumn":18},{"ruleId":"177","severity":1,"message":"184","line":1,"column":28,"nodeType":"179","messageId":"180","endLine":1,"endColumn":34},{"ruleId":"177","severity":1,"message":"185","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":18},{"ruleId":"177","severity":1,"message":"186","line":9,"column":10,"nodeType":"179","messageId":"180","endLine":9,"endColumn":15},{"ruleId":"177","severity":1,"message":"187","line":9,"column":17,"nodeType":"179","messageId":"180","endLine":9,"endColumn":23},{"ruleId":"177","severity":1,"message":"188","line":9,"column":25,"nodeType":"179","messageId":"180","endLine":9,"endColumn":30},{"ruleId":"177","severity":1,"message":"189","line":12,"column":10,"nodeType":"179","messageId":"180","endLine":12,"endColumn":26},{"ruleId":"177","severity":1,"message":"190","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"191","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":14},{"ruleId":"177","severity":1,"message":"192","line":14,"column":9,"nodeType":"179","messageId":"180","endLine":14,"endColumn":20},{"ruleId":"177","severity":1,"message":"193","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":19},{"ruleId":"177","severity":1,"message":"194","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":22},{"ruleId":"177","severity":1,"message":"182","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":16},{"ruleId":"177","severity":1,"message":"195","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"177","severity":1,"message":"196","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":22},{"ruleId":"177","severity":1,"message":"197","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"198","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"199","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":21},{"ruleId":"177","severity":1,"message":"200","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"177","severity":1,"message":"201","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":19},{"ruleId":"173","replacedBy":"202"},{"ruleId":"175","replacedBy":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"@typescript-eslint/no-unused-vars","'AxiosResponse' is defined but never used.","Identifier","unusedVar","'LogIn' is defined but never used.","'action' is defined but never used.","'useAlert' is defined but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","'Alert' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'isLoginFormEmpty' is defined but never used.","'useEffect' is defined but never used.","'Switch' is defined but never used.","'userReducer' is assigned a value but never used.","'userReducer' is defined but never used.","'createAction' is defined but never used.","'Form' is defined but never used.","'ArticleState' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'UserState' is defined but never used.",["204"],["205"],"no-global-assign","no-unsafe-negation"]